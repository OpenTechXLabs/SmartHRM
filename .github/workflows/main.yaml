name: SmartHRM CI/CD pipeline
on:
  push:
    branches:
    - release-mvp-0.6 # Update the branch accordingly
  workflow_dispatch:
    # Enable manual triggering

jobs:
  image-build:
    runs-on: ubuntu-latest
    environment: dev
    strategy:
      max-parallel: 6
      matrix:
        service:
        # microservice folder add/remove accordingly
        - client-master
        - candidate-master
        - requirement-master
        - intermediate-master
    
    steps:
    # Checkout Code
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Detect Changes in Service Folder
    - name: Check if folder changed for ${{ matrix.service }}
      id: folder-check
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^${{ matrix.service }}/"; then
          echo "changes=true" >> $GITHUB_ENV
        else
          echo "changes=false" >> $GITHUB_ENV
        fi
    # Skip job if no changes
    - name: Skip if no changes
      if: env.changes == 'false'
      run: echo "No changes in ${{ matrix.service }}. Skipping build and deploy."

    # Set up QEMU to enable cross-platform builds
    - name: Set up QEMU
      if: env.changes == 'true'
      uses: docker/setup-qemu-action@v3

    # Set up Docker Buildx (for multi-architecture)
    - name: Set up Docker Buildx
      if: env.changes == 'true'
      uses: docker/setup-buildx-action@v3

    # Login to Docker Hub
    - name: Login to Docker Hub
      if: env.changes == 'true'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build Docker Image for ${{ matrix.service }}
    - name: Build Docker Image for ${{ matrix.service }}
      if: env.changes == 'true'
      run: |
        cd ${{ matrix.service }}
        docker buildx build --platform linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/smart_hr_system:${{ matrix.service }} --push .
          
  deploy:
    needs: image-build
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write   # Required for OIDC
      contents: read    # Required to checkout code        
    strategy:
      max-parallel: 1
      matrix:
        service:
        - client-master
        - candidate-master
        - requirement-master
        - intermediate-master
    
    steps:
      - name: Checkout Repository
        if: env.changes == 'true'
        uses: actions/checkout@v4
    
      - name: Configure AWS Credentials
        if: env.changes == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-aws-oidc-role
          aws-region: us-east-1

      - name: Run commands via SSM
        if: env.changes == 'true'
        run: |
          INSTANCE_ID="i-0f860a183c355edb9" 
          # Send SSM Command to perform a rollout-restart
          aws ssm send-command \
            --instance-ids $INSTANCE_ID \
            --document-name "kubectl-command-execute" \
            --parameters 'commands=["/home/ssm-user/${{matrix.service}}.sh"]'
